import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.HashMap;
import java.util.Map;
import java.util.function.Predicate;

public class FindFileWithContent {

  public static void main(String[] args) throws IOException {
    String filePath = "C:\\path\\to\\folder"; // Replace with your desired path
    String fileName = "query.gql";

    Path path = Paths.get(filePath);
    Predicate<Path> predicate = (file) -> Files.isRegularFile(file) && file.getFileName().toString().equals(fileName);

    Map<String, String> fileContentMap = new HashMap<>();
    Files.walkFileTree(path, predicate, (path, fileAttributes) -> {
      if (fileAttributes.isRegularFile()) {
        Path parent = path.getParent();
        String folderName = Optional.ofNullable(parent)
          .map(Path::getFileName)
          .map(Path::toString)
          .orElseThrow(() -> new RuntimeException("Parent path not found"));

        String fileContent = new String(Files.readAllBytes(path));
        fileContentMap.put(folderName, fileContent);
      }
    });

    System.out.println("Folder Name\tFile Content");
    fileContentMap.forEach((folderName, fileContent) -> System.out.println(String.format("%s\t%s", folderName, fileContent)));
  }
}
